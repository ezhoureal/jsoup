/*
 * This file was automatically generated by EvoSuite
 * Mon Sep 20 22:22:06 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.ParseError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ParseError_ESTest extends ParseError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      ParseError parseError0 = new ParseError(65, "<", objectArray0);
      String string0 = parseError0.getCursorPos();
      assertEquals(65, parseError0.getPosition());
      assertEquals("65", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      ParseError parseError0 = new ParseError(65, "<", objectArray0);
      String string0 = parseError0.toString();
      assertEquals("<65>: <", string0);
      assertEquals(65, parseError0.getPosition());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ParseError parseError0 = new ParseError((-1), "BIKiVWOpwA$c");
      parseError0.getErrorMessage();
      assertEquals((-1), parseError0.getPosition());
      assertEquals("-1", parseError0.getCursorPos());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      ParseError parseError0 = new ParseError(characterReader0, "");
      assertEquals(0, parseError0.getPosition());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|90");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      Object[] objectArray0 = new Object[7];
      ParseError parseError0 = new ParseError(characterReader0, "cQj<CB17Pfp", objectArray0);
      assertEquals("1:1", parseError0.getCursorPos());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParseError parseError0 = new ParseError((-1), "BIKiVWOpwA$c");
      int int0 = parseError0.getPosition();
      assertEquals((-1), int0);
      assertEquals("-1", parseError0.getCursorPos());
  }
}
