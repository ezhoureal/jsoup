/*
 * This file was automatically generated by EvoSuite
 * Mon Sep 20 21:14:51 GMT 2021
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.Selector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Selector_ESTest extends Selector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.body();
      element0.wrap("/oh@d'n");
      Elements elements0 = element0.parents();
      Elements elements1 = Selector.filterOut(elements0, elements0);
      assertEquals(0, elements1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Document.createShell("xV2%6!$<H.X~)");
      Elements elements0 = Selector.select((Evaluator) evaluator_IsFirstChild0, (Element) document0);
      Elements elements1 = Selector.filterOut(elements0, elements0);
      Elements elements2 = Selector.filterOut(elements0, elements1);
      assertFalse(elements2.equals((Object)elements1));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Tag tag0 = Tag.valueOf("mvcr");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "mvcr", attributes0);
      formElement0.appendElement("mvcr");
      Elements elements0 = formElement0.getAllElements();
      Elements elements1 = Selector.select("mvcr", (Iterable<Element>) elements0);
      assertTrue(elements1.equals((Object)elements0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Document document0 = Document.createShell("xV2%6!$<H.X~)");
      // Undeclared exception!
      try { 
        Selector.selectFirst("xV2%6!$<H.X~)", document0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'xV2%6!$<H.X~)': unexpected token at '%6!$<H.X~)'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.select.Selector", "org.jsoup.select.Selector");
      Selector.select("org.jsoup.select.Selector", (Element) document0);
  }
}
