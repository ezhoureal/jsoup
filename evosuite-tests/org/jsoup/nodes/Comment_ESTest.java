/*
 * This file was automatically generated by EvoSuite
 * Mon Sep 20 21:44:59 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.XmlDeclaration;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Comment_ESTest extends Comment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Comment comment0 = new Comment("x9");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      assertNull(xmlDeclaration0);
      assertEquals("#comment", comment0.nodeName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Comment comment0 = new Comment("Bug: no template insertion mode on stack!");
      Comment comment1 = comment0.setData("9?'a_07*v");
      comment1.asXmlDeclaration();
      assertEquals("#comment", comment1.nodeName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Comment comment0 = new Comment("!-U%");
      boolean boolean0 = comment0.isXmlDeclaration();
      assertTrue(boolean0);
      assertEquals("#comment", comment0.nodeName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Comment comment0 = new Comment("c");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.outline(true);
      // Undeclared exception!
      try { 
        comment0.outerHtmlHead((Appendable) null, 2553, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Comment comment0 = new Comment("");
      comment0.wrap("A2-Sl8SEo2>Zx[_D[,");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        comment0.outerHtmlHead((Appendable) null, 0, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Comment comment0 = new Comment("Could not determine a form action URL for submit. Ensure you set a base URI when parsing.");
      comment0.setSiblingIndex((-172));
      String string0 = comment0.toString();
      assertEquals("<!--Could not determine a form action URL for submit. Ensure you set a base URI when parsing.-->", string0);
      assertEquals("#comment", comment0.nodeName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Comment comment0 = new Comment("'<'**Y>h*VN'BUc");
      StringBuilder stringBuilder0 = new StringBuilder("'<'**Y>h*VN'BUc");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      comment0.outerHtmlHead(stringBuilder0, 590, document_OutputSettings1);
      assertEquals("'<'**Y>h*VN'BUc<!--'<'**Y>h*VN'BUc-->", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Comment comment0 = new Comment("x9");
      boolean boolean0 = comment0.isXmlDeclaration();
      assertEquals("#comment", comment0.nodeName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Comment comment0 = new Comment("");
      comment0.setData("-UT");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      assertEquals("#comment", comment0.nodeName());
      assertNotNull(xmlDeclaration0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Comment comment0 = new Comment("");
      comment0.clone();
  }
}
